{"version":3,"sources":["index.js"],"names":["Copyright","variant","color","align","href","Date","getFullYear","useStyles","makeStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","SubmitButton","style","margin","width","target","SiteButtons","data-icon","data-size","data-show-count","aria-label","LibraryCard","library","latestVersion","targets","className","this","props","classes","gutterBottom","component","github","name","stars_count","description","category","path","version","kotlin","size","html_url","extractTargetName","undefined","platform","Body","state","libraries","selectedKotlinVersion","selectedCategory","selectedTarget","fetch","then","response","json","setState","catch","error","containerButtons","containerGrid","updateState","newState","self","setTimeout","container","kotlinVersions","flatMap","versions","filter","libraryVersion","mpp","map","v","i","a","indexOf","sort","b","includes","categories","Object","values","filterLibraries","newLib","assign","lib","length","filterStyle","minWidth","justify","item","id","value","onChange","event","labelWidth","items","keys","key","join","call","isMobile","window","innerWidth","columnWidth","gutterWidth","gutterHeight","maxWidth","paragraph","React","Component","ReactDOM","Fragment","document","querySelector"],"mappings":"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","file":"static/js/main.dac0fb98.chunk.js","sourcesContent":["/*\n * Copyright 2020 IceRock MAG Inc. Use of this source code is governed by the Apache 2.0 license.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport * as ReactDOM from \"react-dom\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport GitHubButton from 'react-github-btn';\nimport StackGrid from \"react-stack-grid\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://icerock.dev/\">\n        IceRock Development\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nfunction SubmitButton() {\n  let style = {\n    margin: \"0 16px\",\n    width: \"fit-content\",\n    display: \"block\"\n  };\n  return <Button\n    variant=\"contained\"\n    color=\"primary\"\n    style={style}\n    href=\"https://github.com/icerockdev/multiplatform-libraries#how-to-add-own-lib\"\n    target=\"_blank\"\n  >\n    Submit library\n  </Button>;\n}\n\nfunction SiteButtons() {\n  let style = {\n    margin: \"0 auto 16px\",\n    display: \"flex\",\n    \"justify-content\": \"center\",\n    \"align-items\": \"center\"\n  };\n  return <div style={style}>\n    <GitHubButton\n      href=\"https://github.com/icerockdev/multiplatform-libraries\"\n      data-icon=\"octicon-star\"\n      data-size=\"large\"\n      data-show-count=\"true\"\n      aria-label=\"Star icerockdev/multiplatform-libraries on GitHub\"\n    >Star</GitHubButton>\n    <SubmitButton/>\n    <GitHubButton\n      href=\"https://github.com/icerockdev/multiplatform-libraries/subscription\"\n      data-icon=\"octicon-eye\"\n      data-size=\"large\"\n      data-show-count=\"true\"\n      aria-label=\"Watch icerockdev/multiplatform-libraries on GitHub\"\n    >Watch</GitHubButton>\n  </div>\n}\n\nfunction LibraryCard(library, latestVersion, targets) {\n  let descriptionStyle = {\n    margin: \"8px 0\"\n  };\n  let titleStyle = {\n    display: \"flex\",\n    \"justify-content\": \"space-between\"\n  };\n\n  return <Card className={this.props.classes.card}>\n    <CardContent className={this.props.classes.cardContent}>\n      <Typography gutterBottom variant=\"h5\" component=\"h2\" style={titleStyle}>\n        {library.github.name}\n        <Typography variant=\"subtitle1\">â {library.github.stars_count}</Typography>\n      </Typography>\n      <Typography style={descriptionStyle}>{library.github.description}</Typography>\n      <Typography>Category: {library.category}</Typography>\n      <Typography>Gradle: {library.path + \":\" + latestVersion.version}</Typography>\n      <Typography>Kotlin: {latestVersion.kotlin}</Typography>\n      <Typography>Targets: {targets}</Typography>\n    </CardContent>\n    <CardActions>\n      <Button size=\"small\" color=\"primary\" href={library.github.html_url} target={\"_blank\"}>\n        GitHub\n      </Button>\n    </CardActions>\n  </Card>;\n}\n\nfunction extractTargetName(target) {\n  if(target.target !== undefined) return target.target;\n  else return target.platform;\n}\n\nclass Body extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      libraries: null,\n      selectedKotlinVersion: null,\n      selectedCategory: null,\n      selectedTarget: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"data.json\")\n      .then(response => response.json())\n      .then(libraries => {\n        this.setState({libraries: libraries});\n      })\n      .catch(error => {\n        // let textNode = document.createTextNode(error);\n        // content.appendChild(textNode);\n      });\n  }\n\n  render() {\n    const libraries = this.state.libraries;\n    const updateState = newState => {\n      // FIXME remove duplicated call (now used for correct relayout of cards grid)\n      this.setState(newState);\n      const self = this;\n      setTimeout(function() {\n        self.setState(newState);\n      }, 50)\n    }\n    const handleKotlinVersionChange = event => {\n      let newState = this.state;\n      newState.selectedKotlinVersion = event.target.value;\n      updateState(newState);\n    };\n    const handleCategoryChange = event => {\n      let newState = this.state;\n      newState.selectedCategory = event.target.value;\n      updateState(newState);\n    };\n    const handleTargetChange = event => {\n      let newState = this.state;\n      newState.selectedTarget = event.target.value;\n      updateState(newState);\n    };\n\n    let containerButtons;\n    let containerGrid;\n    if (libraries == null) {\n      containerButtons = <div/>;\n      containerGrid = <Grid container spacing={4}/>;\n    } else {\n      let kotlinVersions = libraries\n        .flatMap(library => library.versions)\n        .filter(libraryVersion => libraryVersion.mpp === true)\n        .map(libraryVersion => libraryVersion.kotlin)\n        .filter((v, i, a) => a.indexOf(v) === i)\n        .sort()\n        .sort((a, b) => {\n          if(a.includes(\"-\")) return 1;\n          else return -1;\n        });\n      let categories = libraries\n        .map(library => library.category)\n        .filter((v, i, a) => a.indexOf(v) === i);\n      let targets = libraries\n        .flatMap(library => library.versions)\n        .filter(libraryVersion => libraryVersion.mpp === true)\n        .flatMap(libraryVersion => Object.values(libraryVersion.targets))\n        .map(extractTargetName)\n        .filter((v, i, a) => a.indexOf(v) === i);\n\n      let category = this.state.selectedCategory;\n      let kotlin = this.state.selectedKotlinVersion;\n      let target = this.state.selectedTarget;\n      let filterLibraries = libraries.filter(library => {\n        return category === \"\" || category == null || library.category === category;\n      }).map(library => {\n        let newLib = {};\n        Object.assign(newLib, library);\n        newLib.versions = library.versions\n            .filter(libraryVersion => libraryVersion.mpp === true)\n            .filter(version => {\n              return kotlin === \"\" || kotlin == null || version.kotlin === kotlin;\n            })\n            .filter(version => {\n              return target == null || target === \"\" || Object.values(version.targets).map(extractTargetName).includes(target);\n            });\n        return newLib;\n      }).filter(lib => lib.versions.length > 0);\n\n      let filterStyle = {\n        minWidth: 120\n      };\n      let resultsCountStyle = {\n        margin: \"16px auto 0\",\n        width: \"fit-content\"\n      };\n\n      containerButtons = <div className={this.props.classes.heroButtons}>\n        <SiteButtons/>\n        <Grid container spacing={2} justify=\"center\">\n          <Grid item>\n            <FormControl variant=\"outlined\" style={filterStyle}>\n              <InputLabel>Kotlin</InputLabel>\n              <Select\n                id=\"kotlin-version-selector\"\n                value={this.state.selectedKotlinVersion}\n                onChange={handleKotlinVersionChange}\n                labelWidth={120}\n              >\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                {kotlinVersions.map(version => <MenuItem value={version}>{version}</MenuItem>)}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item>\n            <FormControl variant=\"outlined\" style={filterStyle}>\n              <InputLabel>Category</InputLabel>\n              <Select\n                id=\"category-version-selector\"\n                value={this.state.selectedCategory}\n                onChange={handleCategoryChange}\n                labelWidth={120}\n              >\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                {categories.map(item => <MenuItem value={item}>{item}</MenuItem>)}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item>\n            <FormControl variant=\"outlined\" style={filterStyle}>\n              <InputLabel>Target</InputLabel>\n              <Select\n                id=\"target-version-selector\"\n                value={this.state.selectedTarget}\n                onChange={handleTargetChange}\n                labelWidth={120}\n              >\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                {targets.map(item => <MenuItem value={item}>{item}</MenuItem>)}\n              </Select>\n            </FormControl>\n          </Grid>\n        </Grid>\n        <Typography style={resultsCountStyle}>Results: {filterLibraries.length}</Typography>\n      </div>;\n\n      let items = filterLibraries\n        .sort((a, b) => {\n          if (a.github.stars_count === b.github.stars_count) return 0;\n          else if (a.github.stars_count > b.github.stars_count) return -1;\n          else return 1;\n        })\n        .map(library => {\n          let latestVersion = library.versions[library.versions.length - 1];\n          let platforms = Object.keys(latestVersion.targets)\n            .map(key => {\n              let target = latestVersion.targets[key];\n              if (target.target != null) return target.target;\n              else return target.platform;\n            })\n            .filter((v, i, a) => a.indexOf(v) === i);\n\n          let targets = platforms.join(\", \");\n\n          return LibraryCard.call(this, library, latestVersion, targets);\n        });\n\n      const isMobile = window.innerWidth < 480;\n\n      containerGrid = <StackGrid\n        columnWidth={isMobile ? \"100%\" : \"50%\"}\n        gutterWidth={16}\n        gutterHeight={16}\n        container\n      >{items}</StackGrid>;\n    }\n\n    return (\n      <main>\n        {/* Hero unit */}\n        <div className={this.props.classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              Kotlin Multiplatform libraries\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n              Here is a list of Kotlin Multiplatform libraries with auto-fetch information directly from maven\n              repositories.\n            </Typography>\n            {containerButtons}\n          </Container>\n        </div>\n        <Container className={this.props.classes.cardGrid} maxWidth=\"md\">\n          {/* End hero unit */}\n          {containerGrid}\n        </Container>\n      </main>\n    );\n  }\n}\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline/>\n      <Body classes={classes}/>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Copyright/>\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n  );\n}\n\nReactDOM.render(<App/>, document.querySelector(\"#app\"));\n"],"sourceRoot":""}